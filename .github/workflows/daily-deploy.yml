name: Daily Deploy to Render

on:
  schedule:
    # Runs every day at 2:00 AM Central Time (7:00 AM UTC)
    - cron: '0 7 * * *'
  workflow_dispatch: # Allow manual triggering for testing

jobs:
  server-check:
    name: Server Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Check
        run: npm run check

  server-test:
    name: Server Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Ensure test env file exists
        run: |
          mkdir -p config
          [ -f config/.env.test ] || touch config/.env.test
      - name: Test
        env:
          ENV_FILE: ./config/.env.test
        run: npm run test

  server-build:
    name: Server Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build

  deploy-app:
    name: Deploy App to Render
    runs-on: ubuntu-latest
    needs: [server-check, server-test, server-build]

    steps:
      - name: Trigger Render App Deploy Hook
        run: |
          echo "All validation checks passed. Triggering Render app deployment..."
          response=$(curl -s -w "HTTP_STATUS:%{http_code}" -X POST "${{ secrets.RENDER_APP_DEPLOY_URL }}")
          http_status=$(echo "$response" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)

          if [[ "$http_status" -ge 200 && "$http_status" -lt 300 ]]; then
            echo "✅ App deploy hook triggered successfully (HTTP $http_status)"
          else
            echo "❌ App deploy hook failed (HTTP $http_status)"
            echo "Response: $response"
            exit 1
          fi

  deploy-worker:
    name: Deploy Worker to Render
    runs-on: ubuntu-latest
    needs: [server-check, server-test, server-build]

    steps:
      - name: Trigger Render Worker Deploy Hook
        run: |
          echo "All validation checks passed. Triggering Render worker deployment..."
          response=$(curl -s -w "HTTP_STATUS:%{http_code}" -X POST "${{ secrets.RENDER_WORKER_DEPLOY_URL }}")
          http_status=$(echo "$response" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)

          if [[ "$http_status" -ge 200 && "$http_status" -lt 300 ]]; then
            echo "✅ Worker deploy hook triggered successfully (HTTP $http_status)"
          else
            echo "❌ Worker deploy hook failed (HTTP $http_status)"
            echo "Response: $response"
            exit 1
          fi